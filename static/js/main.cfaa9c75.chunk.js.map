{"version":3,"sources":["AppContext.js","Weather/DetailsWeather/Details.js","Weather/ForecastInfo/Forecast.js","Weather/WeatherInfo/WeatherInfo.js","Weather/SearchCity/Search.js","App.js","reportWebVitals.js","index.js"],"names":["WeatherContext","React","createContext","WeatherProvider","Provider","Consumer","Details","item","index","useContext","Fragment","indexList","className","src","weather","main","alt","city","week","Date","dt_txt","getDay","slice","getMonth","getFullYear","wind","speed","width","height","icon","description","Math","round","temp_min","temp","Forecast","list","ShowForeCast","map","onClick","ShowForecast","getHours","getMinutes","getSeconds","random","WeatherInfo","style","Search","onSubmit","type","name","placeholder","App","props","setState","handleSearchAgain","enterCity","state","handleSubmit","e","preventDefault","target","value","trim","errorMsg","this","axios","get","then","res","data","catch","err","SeacrhCity","PureComponent","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cfaa9c75.chunk.js","sourcesContent":["import React from \"react\"\r\nconst WeatherContext=React.createContext({\r\n    'indexList':0,\r\n    'ShowForecast':()=>{},\r\n    'city':'', 'week':''\r\n})\r\nconst WeatherProvider=WeatherContext.Provider\r\nconst WeatherConsumer=WeatherContext.Consumer\r\n\r\nexport default WeatherContext\r\nexport {WeatherProvider,WeatherConsumer}","import React, { useContext } from \"react\"\r\nimport WeatherContext from \"../../AppContext\"\r\nimport './Details.css'\r\n\r\n\r\nfunction Details({item,index})\r\n{\r\n  const Details=useContext(WeatherContext)\r\n    return(\r\n      <React.Fragment>\r\n        {index === Details.indexList?\r\n          <div className=\"Details-sec\">\r\n            <div className=\"Details-sec-img\">\r\n              <img\r\n              src={`https://source.unsplash.com/1600x900/?${item.weather[0].main}`}\r\n              alt=\"\"/>\r\n            </div>\r\n            <div className=\"Details-sec1\">\r\n              <h3>{Details.city}</h3>\r\n              <h4>{Details.week[new Date(item.dt_txt).getDay()]}</h4>\r\n              <h4>\r\n                {\r\n                  ('0' + (new Date(item.dt_txt).getDay()+1)).slice(-2)+'/'+ ('0' + new Date(item.dt_txt).getMonth()).slice(-2) +'/'+new Date(item.dt_txt).getFullYear()\r\n                }\r\n              </h4>\r\n              <h4>{`wind ${item.wind.speed} km/h`}</h4>\r\n            </div>\r\n            <div className=\"Details-sec2\">\r\n              <img width='100px' height='80px' src={`https://openweathermap.org/img/wn/${item.weather[0].icon}.png`} alt=\"Weather Status img\"/>\r\n              <p>{item.weather[0].description}</p>\r\n            </div>\r\n            <div className=\"Details-sec3\">\r\n              <p>\r\n                <span className=\"temp-min\">\r\n                  {Math.round(item.main.temp_min)}\r\n                  <i className=\"fas fa-arrow-up\"></i>\r\n                </span>\r\n                <span>\r\n                  {Math.round(item.main.temp_min)}\r\n                  <i className=\"fas fa-arrow-down\"></i>\r\n                </span>\r\n              </p>  \r\n              <p>{Math.round(item.main.temp)}</p>\r\n            </div>\r\n          </div>\r\n        :null}\r\n      </React.Fragment>\r\n    )\r\n}\r\nexport default Details","import { useContext } from \"react\"\r\nimport WeatherContext from \"../../AppContext\"\r\nimport './Forecast.css'\r\n\r\nfunction Forecast({list}){\r\n    const ShowForeCast=useContext(WeatherContext)\r\n    return(\r\n        <section className=\"Forecast-sec\">\r\n            {list.map((item,index) =>(\r\n            <div className=\"Forecast-sec-item\" onClick={()=>ShowForeCast.ShowForecast(index)} key={Math.random()*10}>\r\n                {index < (ShowForeCast.indexList + 8)?\r\n                <div>\r\n                    <h3>\r\n                        {new Date(item.dt_txt).getHours()+':'+ \r\n                        ('0' + new Date(item.dt_txt).getMinutes()).slice(-2) \r\n                        +':'+('0' + new Date(item.dt_txt).getSeconds()).slice(-2)\r\n                        }\r\n                    </h3>\r\n                    <img \r\n                    src={`https://openweathermap.org/img/wn/${item.weather[0].icon}.png`} \r\n                    alt=\"Weather Status img\"/>\r\n                    <p>{Math.round(item.main.temp)}</p>\r\n                </div>:null}\r\n            </div>\r\n            ))}\r\n    </section>\r\n    )\r\n}\r\nexport default Forecast\r\n\r\n","import React from \"react\";\r\nimport Details from \"../DetailsWeather/Details\";\r\nimport Forecast from \"../ForecastInfo/Forecast\";\r\nimport './WeatherInfo.css';\r\n\r\nfunction WeatherInfo({list,onClick,city})\r\n{\r\n    return(\r\n      <section className=\"Weather-info\" style={{'backgroundImage':\"url('https://source.unsplash.com/1600x900/?\" + city +\"')\"}}>  \r\n        <section className=\"Weather-info-sec1\">\r\n          <h1>--Weather-ForeCast--</h1>\r\n          {list.map((item,index) =>(\r\n           <Details key={Math.random()*10} item={item} index={index}/>))}\r\n        </section>\r\n        <Forecast list={list}/>\r\n        <button className=\"SearchAginbtn\" onClick={onClick}>Search Again</button>\r\n      </section>\r\n    )\r\n}\r\nexport default WeatherInfo","import React from 'react';\r\nimport './Seach.css';\r\n\r\nfunction Search ({onSubmit}) {\r\n\r\n  return (\r\n      <form className='SearchForm' onSubmit={onSubmit}>\r\n          <input type='text' name='city' placeholder=\"Enter city...\"/>\r\n          <button type='submit'>Search</button>\r\n      </form>    \r\n  );\r\n  \r\n}\r\n\r\nexport default Search;\r\n","import './App.css';\nimport React,{ PureComponent } from 'react';\nimport axios from 'axios';\nimport WeatherInfo from './Weather/WeatherInfo/WeatherInfo';\nimport Search from './Weather/SearchCity/Search';\nimport  { WeatherProvider } from './AppContext';\n\n\nclass App extends PureComponent {\n  constructor(props) \n  {\n    super(props)\n  \n    this.state = \n    {\n      enterCity:false ,\n      city:'',\n      list:[],\n      indexList:0,\n      errorMsg:''\n    };\n  }\n  ShowForecast=(index)=>\n  {\n    this.setState({\n      indexList:index\n    })\n  }\n  handleSearchAgain =()=>\n  {\n    let enterCity=this.state.enterCity\n    this.setState({\n      enterCity:!enterCity\n    })\n  }\n  handleSubmit=(e)=>\n  {\n    e.preventDefault();\n    let enterCity=this.state.enterCity\n    let city=e.target.city.value.trim()\n    city===\"\"? \n    enterCity=false \n    :this.setState({\n      enterCity:!enterCity,\n      city:city\n    })\n  }  \n  componentDidUpdate()\n  {\n    const apiKey='dea886ab571fa9ba5defd3fe2cb73358'\n    let {city} = this.state\n    axios.get(`https://api.openweathermap.org/data/2.5/forecast?q=${city}&units=metric&appid=${apiKey}`)\n    .then(res=>\n      this.setState({\n        list : res.data.list\n      },))\n    .catch(err=>\n      this.setState({\n        errorMsg:'please make sure of city and your connection to network'\n      })) \n  }\n  SeacrhCity()\n  {\n    return(\n      <Search onSubmit={this.handleSubmit}/>\n    )\n  }\n  WeatherInfo()\n  {\n    let {list,city,indexList,errorMsg}=this.state\n    var week=['Monday','Tuesday','Wensday','Thursday','Friday','Saturday','Sunday']\n    return(\n      <WeatherProvider value={({'indexList':indexList,\n       'ShowForecast':this.ShowForecast,\n        'city':city, 'week':week})}>\n        {errorMsg===''?\n        <WeatherInfo \n        onClick={this.handleSearchAgain}\n        list={list}\n        indexList={indexList}\n        city={city}\n        />:<div className=\"error\">{errorMsg}</div>}\n      </WeatherProvider>\n    )\n  }\n  render(){\n    let enterCity=this.state.enterCity\n    return (\n      <div className=\"App\">\n        {enterCity? this.WeatherInfo() : this.SeacrhCity()}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}